@page "/FinancialOperations/delete/{id:int}"
<h3>Delete</h3>

@using HttpService;
@using FinancialManager.DTOs.FinancialOperations

@inject NavigationManager manager
@inject HttpService client

<PageTitle>Delete operation</PageTitle>

@if (ObjectForDelete is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-group">
        <h4>Do you want to delete this operation?</h4>
        <table class="table">
            <tbody>
                <tr>
                    <td>Id</td>
                    <td>@ObjectForDelete.Id</td>
                </tr>
                <tr>
                    <td>Date time</td>
                    <td>@ObjectForDelete.DateTime</td>
                </tr>
                <tr>
                    <td>Amount</td>
                    <td>@ObjectForDelete.Amount</td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>@ObjectForDelete.Description</td>
                </tr>
                <tr>
                    <td>Operation type id</td>
                    <td>@ObjectForDelete.OperationTypeId</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="form-group">
        <input type="submit" value="Delete" @onclick="(async () => await RemoveUser(ObjectForDelete.Id))" class="btn btn-danger" />
        <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
    </div>
}
@code {
    [Parameter]
    public int Id { get; set; }
    public FinancialOperationDetailsDto ObjectForDelete { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        ObjectForDelete = await client.GetObjectAsync<FinancialOperationDetailsDto>($"{HttpService.FinancialOperationUrl}/{Id}");
    }

    protected async Task RemoveUser(int id)
    {
        await client.DeleteObject(HttpService.FinancialOperationUrl, id);
        manager.NavigateTo("/FinancialOperations");
    }
    void Cancel()
    {
        manager.NavigateTo("/FinancialOperations");
    }
}
