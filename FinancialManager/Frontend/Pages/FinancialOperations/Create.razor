@page "/FinancialOperations/Create/"

@using HttpService
@using Shared.DTOs.FinancialOperations;

@inject NavigationManager manager
@inject IHttpService client

<PageTitle>Add operation</PageTitle>

<h3>Add operation</h3>

<EditForm Model="CreateDto" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="DateTime" class="form-label">Date Time</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="CreateDto.DateTime" />
        </div>
        <ValidationMessage For="@(() => CreateDto.DateTime)" />
    </div>
    <div class="mb-3">
        <label for="Amount" class="form-label">Amount</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="CreateDto.Amount" />
        </div>
        <ValidationMessage For="@(() => CreateDto.Amount)" />
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="CreateDto.Description" />
        </div>
        <ValidationMessage For="@(() => CreateDto.Description)" />
    </div>
    <div class="mb-3">
        <label for="OperationTypeId" class="form-label">Operation type id</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="CreateDto.OperationTypeId" />
        </div>
        <ValidationMessage For="@(() => CreateDto.OperationTypeId)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Back">Cancel</button>
    </div>
</EditForm>

@code {
    protected FinancialOperationCreateDto CreateDto { get; set; } = new();

    protected async Task Save()
    {
        try
        {
            await client.PostObject(client.FinancialOperationUri, CreateDto);
        }
        catch
        {
            
        }
        manager.NavigateTo("/FinancialOperations");
    }

    protected void Back()
    {
        manager.NavigateTo("/FinancialOperations");
    }
}
