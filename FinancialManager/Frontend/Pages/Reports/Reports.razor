@page "/Reports"

@using FinancialManager.DTOs.Reports;
@using HttpService

@inject HttpService client
@inject NavigationManager manager
<PageTitle>Reports</PageTitle>

<div class="input-group col">
    <input type="date" class="form-control" placeholder="Enter report date"
           @bind="InputDailyReportDate" width="500" />
</div>
<br />
<button class="btn btn-outline-dark" @onclick="ShowDailyReportAsync">
    <i class="fas fa-times"></i>
    <p>Get daily report</p>
</button>

<br />
<br />
<div class="input-group col">
    <input type="date" class="form-control" placeholder="Enter period report date start"
           @bind="InputPeriodStart" />
</div>
<br />
<div class="input-group col">
    <input type="date" class="form-control" placeholder="Enter period report date end"
           @bind="InputPeriodEnd" />
</div>
<br />
<button class="btn btn-outline-dark" @onclick="ShowPeriodReportAsync">
    <i class="fas fa-times"></i>
    <p>Get period report</p>
</button>
<br />
<br />
@ReportHeader
@if (Report is not null)
{
    <table class="table">
        <tbody>
            <tr>
                <td>Total exprenses</td>
                <td>@Report.TotalExprenses</td>
            </tr>
            <tr>
                <td>Total income</td>
                <td>@Report.TotalIncome</td>
            </tr>
        </tbody>
    </table>

    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>Date and time</th>
                <th>Amount</th>
                <th>Description</th>
                <th>Operation type id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var operation in Report.Operations)
            {
                <tr>
                    <td>@operation.DateTime</td>
                    <td>@operation.Amount</td>
                    <td>@operation.Description</td>
                    <td>@operation.OperationTypeId</td>
                </tr>
            }
        </tbody>
    </table>
    <br />
}
@code {

    public DateOnly InputDailyReportDate { get; set; } = DateOnly.FromDateTime(DateTime.Now);
    public DateOnly InputPeriodStart { get; set; } = DateOnly.FromDateTime(DateTime.Now);
    public DateOnly InputPeriodEnd { get; set; } = DateOnly.FromDateTime(DateTime.Now);
    public string ReportHeader { get; set; } = "No report yet";
    public ReportDetailsDto? Report { get; set; }

    public async Task ShowDailyReportAsync()
    {
        ReportHeader = "Loading...";
        Report = await client.GetObjectAsync<ReportDetailsDto>($"{HttpService.ReportUrl}/GetDailyReport?date={InputDailyReportDate}");
        ReportHeader = $"Report for {InputDailyReportDate}";
    }
    public async Task ShowPeriodReportAsync()
    {
        ReportHeader = "Loading...";
        Report = await client.GetObjectAsync<ReportDetailsDto>($"{HttpService.ReportUrl}/GetPeriodReport?periodStart={InputPeriodStart}&periodEnd={InputPeriodEnd}");
        ReportHeader = $"Report for period from {InputPeriodStart} to {InputPeriodEnd}";
    }
}
