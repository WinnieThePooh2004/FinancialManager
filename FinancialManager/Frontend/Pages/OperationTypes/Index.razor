@page "/OperationTypes"

<PageTitle>Weather forecast</PageTitle>

@using Shared.DTOs.OperationTypes
@using Newtonsoft.Json
@using HttpService
@inject IHttpService client

<PageTitle>All operation types</PageTitle>

<h1>Your incomes and expenses:</h1>

@if (Operations is null)
{
    <p><em>Loading</em></p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <a href='/OperationTypes/create/' class="btn btn-primary" role="button">
                <i class="fas fa-user-plus"></i>
                Add
            </a>
        </div>
    </div>
    <br />
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Is Income</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var operation in Operations)
            {
                <tr>
                    <td>@operation.Id</td>
                    <td>@operation.Name</td>
                    <td>@operation.IsIncome</td>
                    <td>
                        <a href='/OperationTypes/Update/@operation.Id' class="btn btn-outline-dark" role="button">
                            Edit
                        </a>
                        <a href='/OperationTypes/Details/@operation.Id' class="btn btn-outline-dark" role="button">
                            Details
                        </a>
                        <a href='/OperationTypes/delete/@operation.Id' class="btn btn-outline-danger" role="button">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    public List<OperationTypeIndexDto>? Operations { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Operations = await client.GetObjectAsync<List<OperationTypeIndexDto>>(HttpService.OperationTypesUri);
    }
}
